/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package application;


import java.awt.Color;
import java.awt.Font;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import javax.swing.plaf.basic.BasicInternalFrameUI;
/**
 *
 * @author Dai Phuc
 */
public class CreateExamPanel extends javax.swing.JInternalFrame {

    /**
     * Creates new form CreateExamPanel
     */
    
    DefaultTableModel tableModel;
    List<Question> QuestionList;
    
    public CreateExamPanel() {
        
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI)this.getUI();
        ui.setNorthPane(null);
        
        initComponents();
        tableModel = (DefaultTableModel) tblQuestions.getModel();
        showQuestionID();
        
        tblQuestions.getColumnModel().getColumn(0).setPreferredWidth(80);
        tblQuestions.getColumnModel().getColumn(1).setPreferredWidth(400);
        tblQuestions.getColumnModel().getColumn(2).setPreferredWidth(120);
    }
    
    public void showQuestionID() {

        QuestionList = DAO.findQuestionExam2(Application.ExamID);

        tableModel.setRowCount(0);

        QuestionList.forEach(Question -> {
            tableModel.addRow(new Object[]{Question.getIDTest(),
                Question.getQuestions(), Question.getId()});
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        IDField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        QuestionField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        Option1Field = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Option3Field = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Option4Field = new javax.swing.JTextField();
        Option2Field = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        AnswerField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        GradeField = new javax.swing.JTextField();
        AddButton = new javax.swing.JButton();
        ClearButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblQuestions = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setPreferredSize(new java.awt.Dimension(795, 390));

        IDField.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        IDField.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                IDFieldCaretUpdate(evt);
            }
        });
        IDField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDFieldActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel1.setText("ID:");

        QuestionField.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        QuestionField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuestionFieldActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel2.setText("Question:");

        Option1Field.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        Option1Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Option1FieldActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel3.setText("A");

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel5.setText("C");

        Option3Field.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel6.setText("D");

        Option4Field.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        Option2Field.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        Option2Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Option2FieldActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel4.setText("B");

        jLabel7.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel7.setText("Answer:");

        AnswerField.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        AnswerField.setPreferredSize(new java.awt.Dimension(64, 28));

        jLabel9.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel9.setText("Grade:");

        GradeField.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        GradeField.setPreferredSize(new java.awt.Dimension(64, 28));

        AddButton.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        AddButton.setText("Add");
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });

        ClearButton.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        ClearButton.setText("Clear");
        ClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearButtonActionPerformed(evt);
            }
        });

        DeleteButton.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        DeleteButton.setText("Delete");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        tblQuestions.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID (Test)", "Question", "ID (Question)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblQuestions.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tblQuestions);
        if (tblQuestions.getColumnModel().getColumnCount() > 0) {
            tblQuestions.getColumnModel().getColumn(0).setResizable(false);
            tblQuestions.getColumnModel().getColumn(1).setResizable(false);
            tblQuestions.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(IDField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Option3Field))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Option1Field, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Option2Field, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Option4Field, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(QuestionField, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(50, 50, 50)
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(AnswerField, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(162, 162, 162)
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(GradeField, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(AddButton)
                                        .addGap(148, 148, 148)
                                        .addComponent(DeleteButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(ClearButton)
                                        .addGap(176, 176, 176))))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(IDField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(QuestionField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(Option2Field, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(GradeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(Option1Field, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(Option3Field, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Option4Field, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(AnswerField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddButton)
                    .addComponent(ClearButton)
                    .addComponent(DeleteButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void IDFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDFieldActionPerformed

    private void QuestionFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuestionFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_QuestionFieldActionPerformed

    private void Option1FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Option1FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Option1FieldActionPerformed

    private void Option2FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Option2FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Option2FieldActionPerformed

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
        // TODO add your handling code here:
        String ID = IDField.getText();
        System.out.println(Application.ExamID + " " + ID);
        try {

            if (ID.equals("")) {
                JOptionPane.showMessageDialog(this, "ID is null!", "Error", JOptionPane.ERROR_MESSAGE);
                IDField.setBackground(new Color(255, 123, 123));
            } else {

                IDField.setBackground(null);

                if (DAO.check(ID, 1) != true) {
                    int response = JOptionPane.showConfirmDialog(this, "Your questions does not exist. Do you want to add?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                    if (response == JOptionPane.YES_OPTION) {
                        String CourseCode = Application.ExamCourseCode;
                        String Question = QuestionField.getText();
                        String Option1 = Option1Field.getText();
                        String Option2 = Option2Field.getText();
                        String Option3 = Option3Field.getText();
                        String Option4 = Option4Field.getText();
                        String Answer = AnswerField.getText();
                        String Grade = GradeField.getText();

                        try {
                            if (ID.equals("")) {
                                JOptionPane.showMessageDialog(this, "ID is null!", "Error", JOptionPane.ERROR_MESSAGE);
                                IDField.setBackground(new Color(255, 123, 123));
                            } else if (QuestionField.getText().equals("")) {
                                JOptionPane.showMessageDialog(this, "Question is null!", "Error", JOptionPane.ERROR_MESSAGE);
                                QuestionField.setBackground(new Color(255, 123, 123));
                            } else if (Option1Field.getText().equals("")) {
                                JOptionPane.showMessageDialog(this, "Option A is null!", "Error", JOptionPane.ERROR_MESSAGE);
                                Option1Field.setBackground(new Color(255, 123, 123));
                            } else if (Option2Field.getText().equals("")) {
                                JOptionPane.showMessageDialog(this, "Option B is null!", "Error", JOptionPane.ERROR_MESSAGE);
                                Option2Field.setBackground(new Color(255, 123, 123));
                            } else if (Option3Field.getText().equals("")) {
                                JOptionPane.showMessageDialog(this, "Option C is null!", "Error", JOptionPane.ERROR_MESSAGE);
                                Option3Field.setBackground(new Color(255, 123, 123));
                            } else if (Option4Field.getText().equals("")) {
                                JOptionPane.showMessageDialog(this, "Option D is null!", "Error", JOptionPane.ERROR_MESSAGE);
                                Option4Field.setBackground(new Color(255, 123, 123));
                            } else if (AnswerField.getText().equals("")) {
                                JOptionPane.showMessageDialog(this, "Answer is null!", "Error", JOptionPane.ERROR_MESSAGE);
                                AnswerField.setBackground(new Color(255, 123, 123));
                            } else if (GradeField.getText().equals("")) {
                                JOptionPane.showMessageDialog(this, "Grade is null!", "Error", JOptionPane.ERROR_MESSAGE);
                                GradeField.setBackground(new Color(255, 123, 123));
                            } else {

                                Question c = new Question();

                                IDField.setBackground(null);
                                QuestionField.setBackground(null);
                                Option1Field.setBackground(null);
                                Option2Field.setBackground(null);
                                Option3Field.setBackground(null);
                                Option4Field.setBackground(null);
                                AnswerField.setBackground(null);
                                GradeField.setBackground(null);

                                c.setId(ID);
                                c.setCourse(CourseCode);
                                c.setQuestions(Question);
                                c.setOption1(Option1);
                                c.setOption2(Option2);
                                c.setOption3(Option3);
                                c.setOption4(Option4);
                                c.setAnswer(Answer);
                                c.setGrade(Integer.parseInt(Grade));

                                if (DAO.check(ID, 1) == true) {
                                    JOptionPane.showMessageDialog(this, "ID has already existed!", "Error", JOptionPane.ERROR_MESSAGE);
                                } else {
                                    DAO.insertQuestion(c);
                                    JOptionPane.showMessageDialog(this, "Successfully insert question!", "Alert", JOptionPane.INFORMATION_MESSAGE);
                                    ID += 1;
                                    int id = Integer.parseInt(IDField.getText()) + 1;
                                    IDField.setText(String.valueOf(id));
                                }

                            }

                        } catch (Exception e) {
                            e.printStackTrace();
                        }

                    }
                }

            }

            DAO.insertQuestionExam(Application.ExamID, ID);
            JOptionPane.showMessageDialog(this, "Successfully insert question!", "Alert", JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception e) {
            e.printStackTrace();
        }
        showQuestionID();
    }//GEN-LAST:event_AddButtonActionPerformed

    private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
        // TODO add your handling code here:
        int response = JOptionPane.showConfirmDialog(this, "Do you want to clear (All questions will be lost)?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (response == JOptionPane.YES_OPTION) {
            DAO.clear(Application.ExamID);
            showQuestionID();
        }
    }//GEN-LAST:event_ClearButtonActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        // TODO add your handling code here:
        String ID = IDField.getText();
        if (DAO.check(ID, 1) == false) {
            JOptionPane.showMessageDialog(this, "ID is not existed!", "Error", JOptionPane.ERROR_MESSAGE);
            IDField.setBackground(new Color(255, 123, 123));
        }
        else {
            IDField.setBackground(null);
            DAO.removeQuestions(ID);
            JOptionPane.showMessageDialog(this, "Sucessfully deleted!", "Alert", JOptionPane.INFORMATION_MESSAGE);
        }
        showQuestionID();
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void IDFieldCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_IDFieldCaretUpdate
        // TODO add your handling code here:
        String ID = IDField.getText();
        
        if (DAO.findQuestion2(ID) == true) {

            QuestionField.setText(Application.questions);
            Option1Field.setText(Application.option1);
            Option2Field.setText(Application.option2);
            Option3Field.setText(Application.option3);
            Option4Field.setText(Application.option4);
            AnswerField.setText(Application.answer);
            GradeField.setText(String.valueOf(Application.grade));

        } else {

            QuestionField.setText("");
            Option1Field.setText("");
            Option2Field.setText("");
            Option3Field.setText("");
            Option4Field.setText("");
            AnswerField.setText("");
            GradeField.setText("");

        }

    }//GEN-LAST:event_IDFieldCaretUpdate


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JTextField AnswerField;
    private javax.swing.JButton ClearButton;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JTextField GradeField;
    private javax.swing.JTextField IDField;
    private javax.swing.JTextField Option1Field;
    private javax.swing.JTextField Option2Field;
    private javax.swing.JTextField Option3Field;
    private javax.swing.JTextField Option4Field;
    private javax.swing.JTextField QuestionField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tblQuestions;
    // End of variables declaration//GEN-END:variables
}
