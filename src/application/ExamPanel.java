/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package application;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.time.LocalDate;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import java.time.LocalDateTime;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Dai Phuc
 */
public class ExamPanel extends javax.swing.JInternalFrame {

    DefaultTableModel tableModel;
    List<Exam> ExamList;

    public ExamPanel() {

        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);

        initComponents();

        tableModel = (DefaultTableModel) tblExam.getModel();

        tblExam.getColumnModel().getColumn(6).setPreferredWidth(20);

        showExam();
    }

    public void showExam() {

        ExamList = DAO.findAllExam();

        tableModel.setRowCount(0);

        ExamList.forEach(Exam -> {
            tableModel.addRow(new Object[]{Exam.getCourseName(), Exam.getNameTest(),
                Exam.getTutor(), Exam.getClassCode(), Exam.getCourseCode(), Exam.getLength(), Exam.getID()});
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblExam = new javax.swing.JTable();
        StartButton = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(780, 388));
        setRequestFocusEnabled(false);

        tblExam.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        tblExam.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Subject", "Name Test", "Tutor", "Class Code", "Course Code", "Time (minutes)", "ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblExam.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblExamMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblExam);

        StartButton.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        StartButton.setText("Start");
        StartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(318, 318, 318)
                .addComponent(StartButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 881, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(StartButton)
                .addContainerGap(76, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblExamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblExamMouseClicked
        // TODO add your handling code here:
        JTable source = (JTable) evt.getSource();
        int row = source.rowAtPoint(evt.getPoint());

        String ID = source.getModel().getValueAt(row, 6) + "";
        DAO.findCourseName(ID);
    }//GEN-LAST:event_tblExamMouseClicked

    private void StartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartButtonActionPerformed
        // TODO add your handling code here:
        if (DAO.checkExam(Application.ID, Application.ExamID)) {
            JOptionPane.showMessageDialog(this, "You have already taken this exam!", "Error", JOptionPane.ERROR_MESSAGE);
        } else 
        if (Application.Activate == 2) {
            JOptionPane.showMessageDialog(this, "This exam is not available at the moment!", "Alert", JOptionPane.INFORMATION_MESSAGE);
        } else if (Application.Activate == 1) {
            DAO.insertDate(Application.ID, Application.ExamID);
            new TakeExamFrame().setVisible(true);
        } else if (Application.Activate == 0) {

            DAO.getTimeDate(Application.ExamID);
            LocalDate date = LocalDate.now();

            DateFormat dateFormat = new SimpleDateFormat("dd-mm-yyyy");
            String comp = date.toString();

            int hour = LocalDateTime.now().getHour();
            int minutes = LocalDateTime.now().getMinute();

            DateFormat time = new SimpleDateFormat("hh:mm:ss");
            Date x = new Date();
            try {
                x = time.parse(Application.ExamTimeStart);
            } catch (ParseException ex) {
                Logger.getLogger(ExamPanel.class.getName()).log(Level.SEVERE, null, ex);
            }

            int hour1 = x.getHours();
            int min1 = x.getMinutes();

            System.out.println(hour + ", " + minutes + ", " + Application.ExamDate + " " + comp + ", " + hour1 + ":" + min1);

            if (comp.equals(Application.ExamDate) && hour > hour1
                    || comp.equals(Application.ExamDate) && hour == hour1 && minutes >= min1) {
                new TakeExamFrame().setVisible(true);
                DAO.insertDate(Application.ID, Application.ExamID);
            } else {
                JOptionPane.showMessageDialog(this, "Exam is not available at the moment", "Alert", JOptionPane.INFORMATION_MESSAGE);
            }

        }

    }//GEN-LAST:event_StartButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton StartButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblExam;
    // End of variables declaration//GEN-END:variables
}
